import speech_recognition as sr
import RPi.GPIO as GPIO          
from time import sleep
import timeit
import time
GPIO.setmode(GPIO.BOARD)

in1 = 18
in2 = 16
en = 22
in3 = 15
in4 = 7
enb = 11
temp1=1

GPIO.setup(in1,GPIO.OUT)
GPIO.setup(in2,GPIO.OUT)
GPIO.setup(in3, GPIO.OUT)
GPIO.setup(in4, GPIO.OUT)
GPIO.setup(enb, GPIO.OUT)
GPIO.setup(en,GPIO.OUT)
GPIO.output(in1,GPIO.LOW)
GPIO.output(in2,GPIO.LOW)
GPIO.output(in3, GPIO.LOW)
GPIO.output(in4, GPIO.LOW)
p=GPIO.PWM(en,4)
p2=GPIO.PWM(enb,4)

p.start(30)
p2.start(30)

def stop_motors():
    GPIO.output(in1,GPIO.LOW)
    GPIO.output(in2,GPIO.LOW)
    GPIO.output(in3, GPIO.LOW)
    GPIO.output(in4, GPIO.LOW)
recognizer = sr.Recognizer()
    
    
def forwardtime():
    print('moving forward')
    p.ChangeDutyCycle(40)
    p2.ChangeDutyCycle(40)
    GPIO.output(in1,GPIO.HIGH)
    GPIO.output(in2,GPIO.LOW)
    GPIO.output(in3, GPIO.HIGH)
    GPIO.output(in4, GPIO.LOW)
    time.sleep(5)
    stop_motors()
def backward():
    print('moving backward')
    p.ChangeDutyCycle(40)
    p2.ChangeDutyCycle(40)
    GPIO.output(in1,GPIO.LOW)
    GPIO.output(in2,GPIO.HIGH)
    GPIO.output(in3, GPIO.LOW)
    GPIO.output(in4, GPIO.HIGH)
    time.sleep(5)
    stop_motors()
def left():
    print('moving left')
    p.ChangeDutyCycle(40)
    p2.ChangeDutyCycle(40)
    GPIO.output(in1,GPIO.LOW)
    GPIO.output(in2,GPIO.HIGH)
    GPIO.output(in3, GPIO.HIGH)
    GPIO.output(in4, GPIO.LOW)
    time.sleep(5)
    stop_motors()
def right():
    print('moving right')
    p.ChangeDutyCycle(40)
    p2.ChangeDutyCycle(40)
    GPIO.output(in1,GPIO.HIGH)
    GPIO.output(in2,GPIO.LOW)
    GPIO.output(in3, GPIO.LOW)
    GPIO.output(in4, GPIO.HIGH)
    time_sleep(5)
    stop_motors
def process_command(command):
    command = command.lower()  # Update the command here
    command_dict = {
        'forward': ['forward', 'move forward', 'go forward'],
        'backward': ['backward', 'move backward', 'go backward', 'move back', 'go back'],
        'left': ['left', 'move left', 'go left'],
        'right': ['right', 'move right', 'go right']
    }
    for action, phrases in command_dict.items():
        if any(phrase in command for phrase in phrases):
            if action == 'forward':
                forwardtime()
            elif action == 'backward':
                backward()
            elif action == 'left':
                left()
            elif action == 'right':
                right()
            return True
    print("Command not recognized: " + str(command))
    return False

listening = True

with sr.Microphone() as source:
    recognizer.adjust_for_ambient_noise(source)
    recognizer.dynamic_energy_threshold = 3500

    while listening:
        try:
            print("listening...")
            audio = recognizer.listen(source, timeout=1.0)
            response = recognizer.recognize_google(audio)
            print(response)
            process_command(response)
        except sr.WaitTimeoutError:
            print("Ran out of time")
        except sr.UnknownValueError:
            print("Didn't recognize that.")
        except sr.RequestError as e:
            print(f"Could not request results from Google Speech Recognition service; {e}")
